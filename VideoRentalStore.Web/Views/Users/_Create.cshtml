@model VideoRentalStore.Web.ViewModels.CreateUserViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">New User</h4>
</div>

@using (Ajax.BeginForm("Create", "Users", new AjaxOptions { HttpMethod = "POST", OnSuccess = "httpPostResult" }))
{
    <div class="modal-body">
        <div class="col-xs-6" style="margin-bottom:10px">
            <div class="form-group" style="margin-bottom: 0px;margin-top: 5px;">
                @Html.LabelFor(model => model.FullName, "FullName", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "label label-danger" })
            </div>

            <div class="form-group" style="margin-bottom: 0px;margin-top: 5px;">
                @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "label label-danger" })
            </div>

            <div class="form-group" style="margin-bottom: 0px;margin-top: 5px;">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "label label-danger" })
            </div>
        </div>
        <div class="col-xs-6" style="margin-bottom:10px">
            <div class="form-group" style="margin-bottom: 0px;margin-top: 5px;">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "label label-danger" })
            </div>

            <div class="form-group" style="margin-bottom: 10px;margin-top: 5px;">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Type, new SelectList(Model.Roles), "Select a type...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "label label-danger" })
            </div>
        </div>
    </div>
    <div class="modal-footer" style="clear:both">
        <button class="btn" type="button" data-dismiss="modal">Cancel</button>
        <input class="btn btn-primary" type="submit" value="Submit" />
    </div>
}
